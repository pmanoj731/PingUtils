import java.io.FileInputStream;
import java.security.KeyStore;
import java.security.PrivateKey;
import java.security.Signature;
import java.security.cert.Certificate;

public class SigningExample {

    public static void main(String[] args) throws Exception {
        // Load keystore file
        String keystorePath = "path/to/keystore.jks";
        String keystorePassword = "keystore_password";
        String alias = "alias_of_certificate";

        FileInputStream fis = new FileInputStream(keystorePath);
        KeyStore keystore = KeyStore.getInstance(KeyStore.getDefaultType());
        keystore.load(fis, keystorePassword.toCharArray());
        fis.close();

        // Get private key and certificate
        PrivateKey privateKey = (PrivateKey) keystore.getKey(alias, keystorePassword.toCharArray());
        Certificate cert = keystore.getCertificate(alias);

        // Create signature instance
        Signature signature = Signature.getInstance("SHA256withRSA");
        signature.initSign(privateKey);

        // Data to be signed
        byte[] data = "Hello, world!".getBytes();

        // Sign the data
        signature.update(data);
        byte[] signedData = signature.sign();

        System.out.println("Signed data: " + new String(signedData));

        // Verify the signature
        Signature verifier = Signature.getInstance("SHA256withRSA");
        verifier.initVerify(cert);
        verifier.update(data);

        boolean isValid = verifier.verify(signedData);
        System.out.println("Signature verification result: " + isValid);
    }
}
